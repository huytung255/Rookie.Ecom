@using Rookie.Ecom.Contracts
@model BasePagedResponseModel
@{
    //pageIndex=?&keyword=?
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }
        if (request.Query[key].Count > 1)
        {
            foreach (var item in (string[])request.Query[key])
            {
                urlTemplate += "&" + key + "=" + item;
            }
        }
        else
        {
            urlTemplate += "&" + key + "=" + request.Query[key];
        }
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.TotalPages);
}

@if (Model.TotalPages > 1)
{
    <ul class="pagination mt-5 justify-content-center my-pagination">
        @if (Model.CurrentPage != startIndex)
        {
            <li class="page-item">
                <a class="page-link" title="1" href="@urlTemplate.Replace("{0}", "1")">
                    <span aria-hidden="true" class="mdi mdi-chevron-double-left"></span>
                    <span class="sr-only">First</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}", (Model.CurrentPage-1).ToString())">
                    <span aria-hidden="true" class="mdi mdi-chevron-left"></span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }
        @for (var i = startIndex; i <= finishIndex; i++)
        {
            if (i == Model.CurrentPage)
            {
                <li class="page-item active">
                    <a class="page-link" href="#">@i <span class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                <li class="page-item"><a class="page-link" title="Trang @i.ToString()" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
            }
        }
        @if (Model.CurrentPage != finishIndex)
        {
            <li class="page-item">
                <a class="page-link" title="@Model.TotalPages.ToString()" href="@urlTemplate.Replace("{0}", (Model.CurrentPage+1).ToString())">
                    <span aria-hidden="true" class="mdi mdi-chevron-right"></span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}", Model.TotalPages.ToString())">
                    <span aria-hidden="true" class="mdi mdi-chevron-double-right"></span>
                    <span class="sr-only">Last</span>
                </a>
            </li>
        }
    </ul>
}